/*
 * This file is generated by jOOQ.
 */
package com.xzh.myresrc.base.db;


import com.xzh.myresrc.base.db.tables.SysDict;
import com.xzh.myresrc.base.db.tables.records.SysDictRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>myresrc_base</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<SysDictRecord, Long> IDENTITY_SYS_DICT = Identities0.IDENTITY_SYS_DICT;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<SysDictRecord> KEY_SYS_DICT_PRIMARY = UniqueKeys0.KEY_SYS_DICT_PRIMARY;
    public static final UniqueKey<SysDictRecord> KEY_SYS_DICT_TYPE = UniqueKeys0.KEY_SYS_DICT_TYPE;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<SysDictRecord, Long> IDENTITY_SYS_DICT = Internal.createIdentity(SysDict.SYS_DICT, SysDict.SYS_DICT.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<SysDictRecord> KEY_SYS_DICT_PRIMARY = Internal.createUniqueKey(SysDict.SYS_DICT, "KEY_sys_dict_PRIMARY", SysDict.SYS_DICT.ID);
        public static final UniqueKey<SysDictRecord> KEY_SYS_DICT_TYPE = Internal.createUniqueKey(SysDict.SYS_DICT, "KEY_sys_dict_type", SysDict.SYS_DICT.TYPE, SysDict.SYS_DICT.CODE);
    }
}
