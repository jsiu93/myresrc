/*
 * This file is generated by jOOQ.
 */
package com.xzh.myresrc.admin.db.tables.records;


import com.xzh.myresrc.admin.db.tables.SysUserToken;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 系统用户Token
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysUserTokenRecord extends UpdatableRecordImpl<SysUserTokenRecord> implements Record4<Long, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -688157708;

    /**
     * Setter for <code>myresrc_admin.sys_user_token.user_id</code>.
     */
    public void setUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>myresrc_admin.sys_user_token.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>myresrc_admin.sys_user_token.token</code>. token
     */
    public void setToken(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>myresrc_admin.sys_user_token.token</code>. token
     */
    public String getToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>myresrc_admin.sys_user_token.expire_time</code>. 过期时间
     */
    public void setExpireTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>myresrc_admin.sys_user_token.expire_time</code>. 过期时间
     */
    public LocalDateTime getExpireTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>myresrc_admin.sys_user_token.update_time</code>. 更新时间
     */
    public void setUpdateTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>myresrc_admin.sys_user_token.update_time</code>. 更新时间
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return SysUserToken.SYS_USER_TOKEN.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SysUserToken.SYS_USER_TOKEN.TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return SysUserToken.SYS_USER_TOKEN.EXPIRE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field4() {
        return SysUserToken.SYS_USER_TOKEN.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component3() {
        return getExpireTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component4() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getExpireTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value4() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysUserTokenRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysUserTokenRecord value2(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysUserTokenRecord value3(LocalDateTime value) {
        setExpireTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysUserTokenRecord value4(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysUserTokenRecord values(Long value1, String value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysUserTokenRecord
     */
    public SysUserTokenRecord() {
        super(SysUserToken.SYS_USER_TOKEN);
    }

    /**
     * Create a detached, initialised SysUserTokenRecord
     */
    public SysUserTokenRecord(Long userId, String token, LocalDateTime expireTime, LocalDateTime updateTime) {
        super(SysUserToken.SYS_USER_TOKEN);

        set(0, userId);
        set(1, token);
        set(2, expireTime);
        set(3, updateTime);
    }
}
