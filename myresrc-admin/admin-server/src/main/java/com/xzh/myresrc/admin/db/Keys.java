/*
 * This file is generated by jOOQ.
 */
package com.xzh.myresrc.admin.db;


import com.xzh.myresrc.admin.db.tables.SysLog;
import com.xzh.myresrc.admin.db.tables.SysMenu;
import com.xzh.myresrc.admin.db.tables.SysRole;
import com.xzh.myresrc.admin.db.tables.SysRoleMenu;
import com.xzh.myresrc.admin.db.tables.SysUser;
import com.xzh.myresrc.admin.db.tables.SysUserRole;
import com.xzh.myresrc.admin.db.tables.SysUserToken;
import com.xzh.myresrc.admin.db.tables.records.SysLogRecord;
import com.xzh.myresrc.admin.db.tables.records.SysMenuRecord;
import com.xzh.myresrc.admin.db.tables.records.SysRoleMenuRecord;
import com.xzh.myresrc.admin.db.tables.records.SysRoleRecord;
import com.xzh.myresrc.admin.db.tables.records.SysUserRecord;
import com.xzh.myresrc.admin.db.tables.records.SysUserRoleRecord;
import com.xzh.myresrc.admin.db.tables.records.SysUserTokenRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>myresrc_admin</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<SysLogRecord, Long> IDENTITY_SYS_LOG = Identities0.IDENTITY_SYS_LOG;
    public static final Identity<SysMenuRecord, Long> IDENTITY_SYS_MENU = Identities0.IDENTITY_SYS_MENU;
    public static final Identity<SysRoleRecord, Long> IDENTITY_SYS_ROLE = Identities0.IDENTITY_SYS_ROLE;
    public static final Identity<SysRoleMenuRecord, Long> IDENTITY_SYS_ROLE_MENU = Identities0.IDENTITY_SYS_ROLE_MENU;
    public static final Identity<SysUserRecord, Long> IDENTITY_SYS_USER = Identities0.IDENTITY_SYS_USER;
    public static final Identity<SysUserRoleRecord, Long> IDENTITY_SYS_USER_ROLE = Identities0.IDENTITY_SYS_USER_ROLE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<SysLogRecord> KEY_SYS_LOG_PRIMARY = UniqueKeys0.KEY_SYS_LOG_PRIMARY;
    public static final UniqueKey<SysMenuRecord> KEY_SYS_MENU_PRIMARY = UniqueKeys0.KEY_SYS_MENU_PRIMARY;
    public static final UniqueKey<SysRoleRecord> KEY_SYS_ROLE_PRIMARY = UniqueKeys0.KEY_SYS_ROLE_PRIMARY;
    public static final UniqueKey<SysRoleMenuRecord> KEY_SYS_ROLE_MENU_PRIMARY = UniqueKeys0.KEY_SYS_ROLE_MENU_PRIMARY;
    public static final UniqueKey<SysUserRecord> KEY_SYS_USER_PRIMARY = UniqueKeys0.KEY_SYS_USER_PRIMARY;
    public static final UniqueKey<SysUserRecord> KEY_SYS_USER_USERNAME = UniqueKeys0.KEY_SYS_USER_USERNAME;
    public static final UniqueKey<SysUserRoleRecord> KEY_SYS_USER_ROLE_PRIMARY = UniqueKeys0.KEY_SYS_USER_ROLE_PRIMARY;
    public static final UniqueKey<SysUserTokenRecord> KEY_SYS_USER_TOKEN_PRIMARY = UniqueKeys0.KEY_SYS_USER_TOKEN_PRIMARY;
    public static final UniqueKey<SysUserTokenRecord> KEY_SYS_USER_TOKEN_TOKEN = UniqueKeys0.KEY_SYS_USER_TOKEN_TOKEN;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<SysLogRecord, Long> IDENTITY_SYS_LOG = Internal.createIdentity(SysLog.SYS_LOG, SysLog.SYS_LOG.ID);
        public static Identity<SysMenuRecord, Long> IDENTITY_SYS_MENU = Internal.createIdentity(SysMenu.SYS_MENU, SysMenu.SYS_MENU.MENU_ID);
        public static Identity<SysRoleRecord, Long> IDENTITY_SYS_ROLE = Internal.createIdentity(SysRole.SYS_ROLE, SysRole.SYS_ROLE.ROLE_ID);
        public static Identity<SysRoleMenuRecord, Long> IDENTITY_SYS_ROLE_MENU = Internal.createIdentity(SysRoleMenu.SYS_ROLE_MENU, SysRoleMenu.SYS_ROLE_MENU.ID);
        public static Identity<SysUserRecord, Long> IDENTITY_SYS_USER = Internal.createIdentity(SysUser.SYS_USER, SysUser.SYS_USER.USER_ID);
        public static Identity<SysUserRoleRecord, Long> IDENTITY_SYS_USER_ROLE = Internal.createIdentity(SysUserRole.SYS_USER_ROLE, SysUserRole.SYS_USER_ROLE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<SysLogRecord> KEY_SYS_LOG_PRIMARY = Internal.createUniqueKey(SysLog.SYS_LOG, "KEY_sys_log_PRIMARY", SysLog.SYS_LOG.ID);
        public static final UniqueKey<SysMenuRecord> KEY_SYS_MENU_PRIMARY = Internal.createUniqueKey(SysMenu.SYS_MENU, "KEY_sys_menu_PRIMARY", SysMenu.SYS_MENU.MENU_ID);
        public static final UniqueKey<SysRoleRecord> KEY_SYS_ROLE_PRIMARY = Internal.createUniqueKey(SysRole.SYS_ROLE, "KEY_sys_role_PRIMARY", SysRole.SYS_ROLE.ROLE_ID);
        public static final UniqueKey<SysRoleMenuRecord> KEY_SYS_ROLE_MENU_PRIMARY = Internal.createUniqueKey(SysRoleMenu.SYS_ROLE_MENU, "KEY_sys_role_menu_PRIMARY", SysRoleMenu.SYS_ROLE_MENU.ID);
        public static final UniqueKey<SysUserRecord> KEY_SYS_USER_PRIMARY = Internal.createUniqueKey(SysUser.SYS_USER, "KEY_sys_user_PRIMARY", SysUser.SYS_USER.USER_ID);
        public static final UniqueKey<SysUserRecord> KEY_SYS_USER_USERNAME = Internal.createUniqueKey(SysUser.SYS_USER, "KEY_sys_user_username", SysUser.SYS_USER.USERNAME);
        public static final UniqueKey<SysUserRoleRecord> KEY_SYS_USER_ROLE_PRIMARY = Internal.createUniqueKey(SysUserRole.SYS_USER_ROLE, "KEY_sys_user_role_PRIMARY", SysUserRole.SYS_USER_ROLE.ID);
        public static final UniqueKey<SysUserTokenRecord> KEY_SYS_USER_TOKEN_PRIMARY = Internal.createUniqueKey(SysUserToken.SYS_USER_TOKEN, "KEY_sys_user_token_PRIMARY", SysUserToken.SYS_USER_TOKEN.USER_ID);
        public static final UniqueKey<SysUserTokenRecord> KEY_SYS_USER_TOKEN_TOKEN = Internal.createUniqueKey(SysUserToken.SYS_USER_TOKEN, "KEY_sys_user_token_token", SysUserToken.SYS_USER_TOKEN.TOKEN);
    }
}
