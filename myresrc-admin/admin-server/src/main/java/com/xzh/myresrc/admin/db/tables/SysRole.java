/*
 * This file is generated by jOOQ.
 */
package com.xzh.myresrc.admin.db.tables;


import com.xzh.myresrc.admin.db.Indexes;
import com.xzh.myresrc.admin.db.Keys;
import com.xzh.myresrc.admin.db.MyresrcAdmin;
import com.xzh.myresrc.admin.db.tables.records.SysRoleRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 角色
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysRole extends TableImpl<SysRoleRecord> {

    private static final long serialVersionUID = -1599860441;

    /**
     * The reference instance of <code>myresrc_admin.sys_role</code>
     */
    public static final SysRole SYS_ROLE = new SysRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysRoleRecord> getRecordType() {
        return SysRoleRecord.class;
    }

    /**
     * The column <code>myresrc_admin.sys_role.role_id</code>.
     */
    public final TableField<SysRoleRecord, Long> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>myresrc_admin.sys_role.role_name</code>. 角色名称
     */
    public final TableField<SysRoleRecord, String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "角色名称");

    /**
     * The column <code>myresrc_admin.sys_role.remark</code>. 备注
     */
    public final TableField<SysRoleRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(100), this, "备注");

    /**
     * The column <code>myresrc_admin.sys_role.create_user_id</code>. 创建者ID
     */
    public final TableField<SysRoleRecord, Long> CREATE_USER_ID = createField("create_user_id", org.jooq.impl.SQLDataType.BIGINT, this, "创建者ID");

    /**
     * The column <code>myresrc_admin.sys_role.create_time</code>. 创建时间
     */
    public final TableField<SysRoleRecord, LocalDateTime> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "创建时间");

    /**
     * Create a <code>myresrc_admin.sys_role</code> table reference
     */
    public SysRole() {
        this(DSL.name("sys_role"), null);
    }

    /**
     * Create an aliased <code>myresrc_admin.sys_role</code> table reference
     */
    public SysRole(String alias) {
        this(DSL.name(alias), SYS_ROLE);
    }

    /**
     * Create an aliased <code>myresrc_admin.sys_role</code> table reference
     */
    public SysRole(Name alias) {
        this(alias, SYS_ROLE);
    }

    private SysRole(Name alias, Table<SysRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysRole(Name alias, Table<SysRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("角色"));
    }

    public <O extends Record> SysRole(Table<O> child, ForeignKey<O, SysRoleRecord> key) {
        super(child, key, SYS_ROLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MyresrcAdmin.MYRESRC_ADMIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SysRoleRecord, Long> getIdentity() {
        return Keys.IDENTITY_SYS_ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysRoleRecord> getPrimaryKey() {
        return Keys.KEY_SYS_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<SysRoleRecord>>asList(Keys.KEY_SYS_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysRole as(String alias) {
        return new SysRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysRole as(Name alias) {
        return new SysRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysRole rename(String name) {
        return new SysRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysRole rename(Name name) {
        return new SysRole(name, null);
    }
}
